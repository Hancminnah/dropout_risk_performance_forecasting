---
title: "Untitled"
format: html
editor: visual
---

Read time series data

```{r}
library(tidyverse)
library(gt)
library(kableExtra)
library(knitr)
library(tidyquant) # for getting stock price
library(scales) # for formatting numbers in ggplot2
# library(ggfortify) # for autoplot conflicting with forecast!
library(forecast) # for auto.arima

# define a `set_theme` function
set_theme <- function(...) {
  # theme(plot.background = element_rect(fill = 'white', colour = 'black')) +
  theme(panel.background = element_rect(fill = 'ivory', colour = 'black')) +
  theme(panel.grid.major = element_line(linetype = "dashed", color = "gray70"))
}

time_series_df <- read.csv("/Users/minminchan/Documents/projects/dropout_risk_performance_forecasting/results/time_series_data.csv")
design_thinking <- time_series_df[time_series_df$course_name== "Design Thinking", ]
intro_to_cs <- time_series_df[time_series_df$course_name== "Intro to CS", ]
engineering_basics <- time_series_df[time_series_df$course_name== "Engineering Basics", ]
prin_business <- time_series_df[time_series_df$course_name== "Principles of Business", ]
```

# Design Thinking
Plot original and predicted values with confidence interval using ggplot

```{r}
model_design1 <- auto.arima(design_thinking$completion_status_failed)
model_design2 <- arima(design_thinking$completion_status_failed, order=c(0,0,0))
model_design1 |> forecast::forecast(h=12) |>
  autoplot() + ylab("Percentage of students who failed") + xlab("Semester") + set_theme() + ggtitle("Design Thinking: Forecasts from ARIMA(0,0,0) with non-zero mean")
# model_design2 |> forecast::forecast(h=12) |>
#   autoplot() + ylab("Percentage of students who failed") + xlab("Semester") + set_theme()
ggsave("/Users/minminchan/Documents/projects/dropout_risk_performance_forecasting/Time_Series_Analysis/design_thinking_forecast.png")
```
# Intro to CS
```{r}
model_cs1 <- arima(intro_to_cs$completion_status_failed, order=c(1,0,0))
model_cs2 <- auto.arima(intro_to_cs$completion_status_failed)
model_cs1 |> forecast::forecast(h=12) |>
  autoplot() + ylab("Percentage of students who failed") + xlab("Semester") + set_theme() + ggtitle("Intro to CS: Forecasts from ARIMA(0,0,0) with non-zero mean")
# model_cs2 |> forecast::forecast(h=12) |>
#   autoplot() + ylab("Percentage of students who failed") + xlab("Semester") + set_theme()
ggsave("/Users/minminchan/Documents/projects/dropout_risk_performance_forecasting/Time_Series_Analysis/intro_to_cs.png")
```
# Engineering Basics
```{r}
model_eng1 <- arima(engineering_basics$completion_status_failed, order=c(0,0,0))
model_eng2 <- auto.arima(engineering_basics$completion_status_failed)
model_eng1 |> forecast::forecast(h=12) |>
  autoplot() + ylab("Percentage of students who failed") + xlab("Semester") + set_theme() + ggtitle("Engineering Basics: Forecasts from ARIMA(0,0,0) with non-zero mean")
# model_eng2 |> forecast::forecast(h=12) |>
#   autoplot() + ylab("Percentage of students who failed") + xlab("Semester") + set_theme()
ggsave("/Users/minminchan/Documents/projects/dropout_risk_performance_forecasting/Time_Series_Analysis/engineering_basics_forecast.png")
```
# Principles of Business and save plot
```{r}
model_bus1 <- arima(prin_business$completion_status_failed, order=c(0,0,0))
model_bus2 <- auto.arima(design_thinking$completion_status_)
model_bus1 |> forecast::forecast(h=12) |>
  autoplot() + ylab("Percentage of students who failed") + xlab("Semester") + set_theme() + ggtitle("Principles of Business: Forecasts from ARIMA(0,0,0) with non-zero mean")
# model_bus2 |> forecast::forecast(h=12) |>
#   autoplot() + ylab("Percentage of students who failed") + xlab("Semester") + set_theme()
# save plot
ggsave("/Users/minminchan/Documents/projects/dropout_risk_performance_forecasting/Time_Series_Analysis/prin_business_forecast.png")
```

